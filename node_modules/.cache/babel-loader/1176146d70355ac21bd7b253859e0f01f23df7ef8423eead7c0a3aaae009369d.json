{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chihoon\\\\Desktop\\\\sparta\\\\\\uC815\\uC608\\uBC18_\\uAC15\\uC758\\\\react_class\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [할일목록, set할일목록] = useState([{\n    id: nanoid(),\n    content: \"리액트 공부하기1\",\n    좋아요: 0\n  }, {\n    id: nanoid(),\n    content: \"리액트 공부하기2\",\n    좋아요: 0\n  }, {\n    id: nanoid(),\n    content: \"리액트 공부하기3\",\n    좋아요: 0\n  }, {\n    id: nanoid(),\n    content: \"리액트 공부하기4\",\n    좋아요: 0\n  }]);\n  const [입력값, 입력값변경] = useState(\"\");\n  const [다크모드, set다크모드] = useState(false); // 다크 모드 상태 추가\n\n  const 증가시키기 = id => {\n    set할일목록(이전할일목록 => 이전할일목록.map(할일 => 할일.id === id ? {\n      ...할일,\n      좋아요: 할일.좋아요 + 1\n    } : 할일));\n  };\n  const 삭제하기 = id => {\n    set할일목록(할일목록.filter(할일 => 할일.id !== id));\n  };\n  const 토글다크모드 = () => {\n    set다크모드(!다크모드);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 다크모드 ? \"dark-mode\" : \"\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: 입력값,\n      onChange: e => {\n        return 입력값변경(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        return set할일목록([...할일목록, {\n          id: nanoid(),\n          content: 입력값,\n          좋아요: 0\n        }]);\n      },\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), 할일목록.map((todo, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: todo.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            증가시키기(todo.id);\n          },\n          children: [\"\\uC88B\\uC544\\uC694 \", todo.좋아요]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            삭제하기(todo.id);\n          },\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: 토글다크모드,\n      children: [다크모드 ? \"라이트 모드로 변경\" : \"다크 모드로 변경\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kHJx9moC93bhctLs3LoGbTtOngY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","nanoid","jsxDEV","_jsxDEV","App","_s","할일목록","set할일목록","id","content","좋아요","입력값","입력값변경","다크모드","set다크모드","증가시키기","이전할일목록","map","할일","삭제하기","filter","토글다크모드","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","todo","i","_c","$RefreshReg$"],"sources":["C:/Users/chihoon/Desktop/sparta/정예반_강의/react_class/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nfunction App() {\n  const [할일목록, set할일목록] = useState([\n    { id: nanoid(), content: \"리액트 공부하기1\", 좋아요: 0 },\n    { id: nanoid(), content: \"리액트 공부하기2\", 좋아요: 0 },\n    { id: nanoid(), content: \"리액트 공부하기3\", 좋아요: 0 },\n    { id: nanoid(), content: \"리액트 공부하기4\", 좋아요: 0 },\n  ]);\n  const [입력값, 입력값변경] = useState(\"\");\n  const [다크모드, set다크모드] = useState(false); // 다크 모드 상태 추가\n\n  const 증가시키기 = (id) => {\n    set할일목록((이전할일목록) =>\n      이전할일목록.map((할일) =>\n        할일.id === id ? { ...할일, 좋아요: 할일.좋아요 + 1 } : 할일\n      )\n    );\n  };\n\n  const 삭제하기 = (id) => {\n    set할일목록(할일목록.filter((할일) => 할일.id !== id));\n  };\n\n  const 토글다크모드 = () => {\n    set다크모드(!다크모드);\n  };\n\n  return (\n    <div className={다크모드 ? \"dark-mode\" : \"\"}>\n      {\" \"}\n      {/* 다크 모드 스타일 적용 */}\n      <input\n        value={입력값}\n        onChange={(e) => {\n          return 입력값변경(e.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          return set할일목록([\n            ...할일목록,\n            { id: nanoid(), content: 입력값, 좋아요: 0 },\n          ]);\n        }}\n      >\n        추가\n      </button>\n      {할일목록.map((todo, i) => {\n        return (\n          <div key={todo.id}>\n            <span>{todo.content}</span>\n            <button\n              onClick={() => {\n                증가시키기(todo.id);\n              }}\n            >\n              좋아요 {todo.좋아요}\n            </button>\n            <button\n              onClick={() => {\n                삭제하기(todo.id);\n              }}\n            >\n              삭제\n            </button>\n          </div>\n        );\n      })}\n      <button onClick={토글다크모드}>\n        {다크모드 ? \"라이트 모드로 변경\" : \"다크 모드로 변경\"} {/* 토글 버튼 */}\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}